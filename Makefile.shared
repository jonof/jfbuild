# Shared make information between Build engine and games

ENGINELIB=libengine.a
EDITORLIB=libbuild.a

SDL2CONFIG?=$(shell which sdl2-config || which false)
PKGCONFIG?=$(shell which pkg-config || which false)
export SDL2CONFIG PKGCONFIG

BUILDCFLAGS=
BUILDCXXFLAGS=
BUILDCPPFLAGS=
BUILDLDFLAGS=-lm

# Detect the platform by interrogating the C compiler. This allows
# cross-compilation by overriding CC etc.
# For reference:
#  Archlinux: x86_64-pc-linux-gnu
#  Debian: x86_64-linux-gnu i386-linux-gnu aarch64-linux-gnu arm-linux-gnueabihf
#  macOS: x86_64-apple-darwin18.2.0
#  mingw32: x86_64-w64-mingw32 i686-w64-mingw32
#  FreeBSD: x86_64-unknown-freebsd10.4
TARGETMACHINE?=$(strip $(shell $(CC) -dumpmachine))
export TARGETMACHINE

ifndef PLATFORM
	PLATFORM=UNKNOWN
	ifneq (,$(findstring -linux,$(TARGETMACHINE)))
		PLATFORM=LINUX
	endif
	ifneq (,$(findstring -freebsd,$(TARGETMACHINE)))
		PLATFORM=BSD
	endif
	ifneq (,$(findstring -mingw32,$(TARGETMACHINE)))
		PLATFORM=WINDOWS
	endif
	ifneq (,$(findstring -darwin,$(TARGETMACHINE)))
		PLATFORM=DARWIN
	endif
endif
ifndef ARCHITECTURE
	ARCHITECTURE=UNKNOWN
	ifneq (,$(findstring aarch64-,$(TARGETMACHINE)))
		ARCHITECTURE=ARM_64
	endif
	ifneq (,$(findstring arm-,$(TARGETMACHINE)))
		ARCHITECTURE=ARM
	endif
	ifneq (,$(findstring x86_64-,$(TARGETMACHINE)))
		ARCHITECTURE=X86_64
	endif
	ifneq (,$(findstring i386-,$(TARGETMACHINE)))
		ARCHITECTURE=X86
	endif
	ifneq (,$(findstring i486-,$(TARGETMACHINE)))
		ARCHITECTURE=X86
	endif
	ifneq (,$(findstring i586-,$(TARGETMACHINE)))
		ARCHITECTURE=X86
	endif
	ifneq (,$(findstring i686-,$(TARGETMACHINE)))
		ARCHITECTURE=X86
	endif
endif

ifeq ($(PLATFORM),WINDOWS)
	RENDERTYPE ?= WIN
	EXESUFFIX=.exe
	BUILDLDFLAGS+= -lmingwex -lwinmm -lws2_32 -lcomctl32 -lcomdlg32 -luxtheme -lxinput9_1_0
else
	RENDERTYPE=SDL
	EXESUFFIX=
endif

ifeq ($(RENDERTYPE),SDL)
	ifneq ($(SDL2CONFIG),)
		SDLCONFIG_CFLAGS=$(shell $(SDL2CONFIG) --cflags)
		SDLCONFIG_LIBS=$(shell $(SDL2CONFIG) --libs)
	else
		$(error No $(SDL2CONFIG) could be found)
	endif

	ifeq (1,$(WITHOUT_GTK))
		HAVE_GTK=0
	else
		ifneq (,$(shell $(PKGCONFIG) --atleast-version=3.4 gtk+-3.0 && echo yes))
			HAVE_GTK=1
			GTKCONFIG_CFLAGS=-DHAVE_GTK $(shell $(PKGCONFIG) --cflags gtk+-3.0)
			GTKCONFIG_LIBS=$(shell $(PKGCONFIG) --libs gtk+-3.0) -ldl
		else
			HAVE_GTK=0
		endif
	endif
endif
ifeq ($(RENDERTYPE),WIN)
	BUILDLDFLAGS+= -mwindows -ldxguid
	#BUILDLDFLAGS+= -static
	#BUILDLDFLAGS+= -static-libgcc -static-libstdc++
endif

# Until I work out how to deal with PIE and PIC, the x86 inline
# assembly is hopelessly broken, so it's forced off for all.
#ifneq ($(ARCHITECTURE),X86)
	USE_ASM=0
#endif

BUILDCPPFLAGS+= -DRENDERTYPE$(RENDERTYPE)=1

ifneq (0,$(USE_POLYMOST))
  BUILDCPPFLAGS+= -DUSE_POLYMOST=$(USE_POLYMOST)
endif
ifneq (0,$(USE_OPENGL))
  BUILDCPPFLAGS+= -DUSE_OPENGL=$(USE_OPENGL)
endif
ifneq (0,$(USE_ASM))
  BUILDCPPFLAGS+= -DUSE_ASM=$(USE_ASM)
endif

